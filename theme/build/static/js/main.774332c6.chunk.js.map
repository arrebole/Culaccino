{"version":3,"sources":["components/Header.tsx","components/Unit.tsx","api/index.ts","views/Home.tsx","views/Paper.tsx","components/Editable.tsx","views/Editor.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","className","href","Unit","props","to","title","create_at","split","update_at","style","width","src","cover","alt","summary","fetch","then","response","json","key","data","method","body","JSON","stringify","PaperList","state","papers","api","fetchPapers","res","setState","this","map","item","maxWidth","React","Component","HomePage","id","marked","setOptions","highlight","code","lang","hljs","value","PaperPage","paper","type","content","window","location","pathname","substring","fetchPaper","height","minHeight","dangerouslySetInnerHTML","__html","EditorPage","emitChange","bind","event","handleChange","contentEditable","onBlur","boxSizing","whiteSpace","queryString","name","reg","RegExp","r","search","substr","match","unescape","createPaper","handleCommit","e","target","currentTarget","innerText","reload","newPaper","alert","message","updatePaper","onChange","placeholder","outline","onClick","handeCancel","App","exact","path","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.774332c6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <header className=\"box-shadow-super bg-blue p-3\" > \r\n            <nav>\r\n                <h1 className=\"m-0 f3\"> <a className=\"text-white text-decoration-none\" href=\"/\">Culaccino</a></h1>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { Paper } from \"../api/index\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Unit: React.FC<Paper> = (props) => {\r\n    return (\r\n        <div className=\"d-flex m-0 p-4 box-shadow-large rounded-2 bg-white flex-column\">\r\n            <div className=\"text-align-center\">\r\n                <div className=\"my-1\">\r\n                    <Link className=\"h4 text-decoration-none text-blue\" to={props.title}>{ props.title }</Link>\r\n                </div>\r\n                <div className=\"f6 d-flex flex-justify-center text-gray-light\">\r\n                    <div className=\"px-1\" >Create on: </div> <time>{props.create_at.split(\" \")[0]}</time>\r\n                    <div className=\"px-1\" >|</div> \r\n                    <div className=\"px-1\" >Update on: </div> <time>{props.update_at.split(\" \")[0]}</time>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-2\">\r\n                <img  style={{width:\"100%\"}} src={ props.cover } alt=\"img\"/>\r\n            </div>\r\n            <p className=\"f4 text-gray text-align-center\">{ props.summary }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Unit","export interface Paper {\r\n    title: string,\r\n    type: string,\r\n    cover: string,\r\n    create_at: string,\r\n    update_at: string,\r\n    summary: string,\r\n    content: string,\r\n}\r\n\r\nexport interface PapersResponse {\r\n    code: number,\r\n    message: string,\r\n    data: Paper[]\r\n}\r\n\r\nexport interface PaperResponse {\r\n    code: number,\r\n    message: string,\r\n    data: Paper,\r\n}\r\n\r\nclass API {\r\n    // fetchPapers 获取所有文章列表\r\n    fetchPapers(limit: number = 10): Promise<PapersResponse> {\r\n        return fetch(`/api/papers`).then(response => response.json())\r\n    }\r\n    // fetchPaper 通过title获取文章的详细内容\r\n    fetchPaper(key?: string): Promise<PaperResponse> {\r\n        return fetch(`/api/paper?key=${key}`).then(response => response.json())\r\n    }\r\n    // newPaper 创建新的文章\r\n    newPaper(data: Paper): Promise<PaperResponse> {\r\n        return fetch(`/api/new`, { method: \"POST\", body: JSON.stringify(data) }).then(response => response.json())\r\n    }\r\n    // updatePaper 更新的文章\r\n    updatePaper(data: Paper): Promise<PaperResponse> {\r\n        return fetch(`/api/update`, { method: \"POST\", body: JSON.stringify(data) }).then(response => response.json())\r\n    }\r\n}\r\n\r\n\r\nexport default new API()","import React from 'react';\r\nimport Header from '../components/Header'\r\nimport Unit from '../components/Unit'\r\nimport api, { Paper } from \"../api\"\r\n\r\n\r\nclass PaperList extends React.Component<{},{ papers: Paper[] }> {\r\n    constructor(props: {}){\r\n        super(props)\r\n        this.state = {\r\n            papers: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        api.fetchPapers().then(res=>{\r\n            this.setState({ papers: res.data})\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            this.state.papers.map(item =>\r\n                <article className=\"m-3\" style={{ width: \"95%\", maxWidth: \"900px\" }} key={item.title}>\r\n                    <Unit {...item}></Unit>\r\n                </article>\r\n            )\r\n        )\r\n    }\r\n\r\n}\r\nexport default class HomePage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"home\" className=\"bg-gray-light\">\r\n                <Header />\r\n                <main className=\"d-flex flex-column flex-items-center\">\r\n                    <PaperList />\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport marked from 'marked';\r\nimport hljs from 'highlight.js'\r\nimport Header from '../components/Header'\r\nimport api,{Paper} from \"../api\"\r\n\r\n// marked use highlight Plugin\r\nmarked.setOptions({ highlight: (code, lang) => hljs.highlight(lang, code).value });\r\n\r\nfunction createMarkup(data: string) {\r\n    return { __html: marked(data) };\r\n}\r\n\r\nexport default class PaperPage extends React.Component<{}, {paper: Paper}> {\r\n    constructor(props: {}) {\r\n        super(props)\r\n        this.state = {\r\n            paper: {\r\n                title: \"Load...\",\r\n                type: \"\",\r\n                cover: \"\",\r\n                create_at: \"Load...\",\r\n                update_at: \"Load...\",\r\n                summary: \"\",\r\n                content: \"\"\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const key = window.location.pathname.substring(1);\r\n        api.fetchPaper(key).then(res => {\r\n            this.setState({ paper: res.data })\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"paper\">\r\n                <Header />\r\n\r\n                <div className=\"box-shadow-large m-4 py-3 border rounded-2 m-conter\" style={{ maxWidth: \"980px\",height: '60px' }}>\r\n                    <div className=\"text-align-center h5\"> { this.state.paper.title } </div>\r\n\r\n                    <div className=\"f6 d-flex flex-justify-center text-gray-light m-1\">\r\n                        <div className=\"px-1\" >Create on: </div> <time>{this.state.paper.create_at.split(\" \")[0]}</time>\r\n                        <div className=\"px-1\" >|</div> \r\n                        <div className=\"px-1\" >Update on: </div> <time>{this.state.paper.create_at.split(\" \")[0]}</time>\r\n                    </div>\r\n                </div>\r\n\r\n                <article className=\"box-shadow-large m-4 border rounded-2 m-conter\" style={{ maxWidth: \"980px\" }}>\r\n                    <section className=\"py-2 px-4\" style={{ minHeight: \"500px\" }}>\r\n                        <div className=\"markdown-body\" dangerouslySetInnerHTML={createMarkup(this.state.paper.content)} ></div>\r\n                    </section>\r\n                </article>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\n\r\ninterface Props {\r\n    handleChange(event: any, target?:string): void;\r\n    value:string;\r\n}\r\n\r\nexport default class EditorPage extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.emitChange = this.emitChange.bind(this)\r\n    }\r\n\r\n    emitChange(event: any) {\r\n        this.props.handleChange(event, \"content\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                id=\"contentEditable\"\r\n                contentEditable\r\n                onBlur={this.emitChange}\r\n                dangerouslySetInnerHTML={{__html: this.props.value}}\r\n                className=\"bg-white border p-3\"\r\n                style={{ minHeight: '530px', width: '100%', maxWidth: '980px', boxSizing: 'border-box',whiteSpace: 'pre-line' }}>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport Header from \"../components/Header\"\r\nimport Editable from \"../components/Editable\"\r\nimport api from \"../api\"\r\n\r\ninterface State {\r\n    title: string,\r\n    type: string,\r\n    cover: string,\r\n    summary: string,\r\n    content: string,\r\n}\r\n\r\nfunction queryString(name: string) {\r\n    var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i');\r\n    var r = window.location.search.substr(1).match(reg);\r\n    if (r != null) {\r\n        return unescape(r[2]);\r\n    }\r\n    return \"\";\r\n}\r\n\r\nfunction createPaper(data: State) {\r\n    return {\r\n        title: data.title,\r\n        cover: data.cover,\r\n        summary: data.summary,\r\n        content: data.content,\r\n        type: \"未分类\",\r\n        create_at: \"\",\r\n        update_at: \"\",\r\n    }\r\n}\r\n\r\nexport default class EditorPage extends React.Component<{}, State> {\r\n    constructor(props: {}) {\r\n        super(props)\r\n        this.state = {\r\n            title: \"\",\r\n            type: \"\",\r\n            cover: \"\",\r\n            summary: \"\",\r\n            content: \"\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleCommit = this.handleCommit.bind(this);\r\n    }\r\n\r\n    handleChange(e: any, target?: string) {\r\n        switch (target) {\r\n            case \"content\":\r\n                this.setState({ content: e.currentTarget.innerText })\r\n                break;\r\n            case \"summary\":\r\n                this.setState({ \"summary\": e.target.value })\r\n                break;\r\n            case \"cover\":\r\n                this.setState({ \"cover\": e.target.value })\r\n                break;\r\n            case \"title\":\r\n                this.setState({ \"title\": e.target.value })\r\n                break;\r\n        }\r\n    }\r\n\r\n    handeCancel() {\r\n        window.location.reload()\r\n    }\r\n\r\n    handleCommit() {\r\n        switch (queryString(\"tab\")) {\r\n            case \"\":\r\n            case \"new\":\r\n                api.newPaper(createPaper(this.state)).then(res => alert(res.message))\r\n                break;\r\n\r\n            case \"update\":\r\n                api.updatePaper(createPaper(this.state)).then(res => alert(res.message))\r\n                break;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (queryString(\"title\") !== \"\") {\r\n            api.fetchPaper(queryString(\"title\")).then(res => {\r\n                this.setState({\r\n                    title: res.data.title,\r\n                    type: res.data.type,\r\n                    cover: res.data.cover,\r\n                    summary: res.data.summary,\r\n                    content: res.data.content,\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"editor\" className=\"bg-gray-light\">\r\n                <Header />\r\n                <main className=\"d-flex flex-column flex-items-center\">\r\n                    <div className=\"py-2\" style={{ width: '100%', maxWidth: '980px' }}>\r\n                        <input onChange={e => this.handleChange(e, \"title\")} value={this.state.title} className=\"border p-2\" placeholder=\"Title\" type=\"text\" style={{ height: '16px' }} />\r\n                    </div>\r\n                    <Editable value={this.state.content} handleChange={this.handleChange} />\r\n                    <div className=\"bg-white border m-2 d-flex flex-column p-3\" style={{ width: '100%', maxWidth: '980px', boxSizing: 'border-box' }}>\r\n                        <h3 className=\"f3 m-2\">Commit changes</h3>\r\n                        <input value={this.state.cover} onChange ={e => this.handleChange(e, \"cover\")} className=\"m-2 border p-2 bg-gray-light box-shadow rounded-2 f5\" type=\"text\" style={{ outline: 'none' }} placeholder=\"Cover URL\" />\r\n                        <textarea value={this.state.summary} onChange={e => this.handleChange(e, \"summary\")} className=\"m-2 border p-2 bg-gray-light box-shadow rounded-2 f5\" style={{ minHeight: '100px', outline: 'none' }} placeholder=\"Add an optional extended description…\" />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn-primary f5 p-2 m-1 rounded-2 border\" onClick={this.handleCommit}>Commit changes</button>\r\n                        <button className=\"btn-danger f5 p-2 m-1 rounded-2 border\" onClick={this.handeCancel}>Cancel</button>\r\n                    </div>\r\n                </main>\r\n                <footer className=\"p-3\"></footer>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport HomePage from './views/Home';\nimport PaperPage from './views/Paper';\nimport EditorPage from './views/Editor';\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\"><HomePage /></Route>\n        <Route path=\"/editor\"><EditorPage /></Route>\n        <Route path=\"/:name\"><PaperPage /></Route>\n        <Route path=\"*\"><Redirect to={{ pathname: \"/\" }}/></Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"normalize.css\"\nimport \"github-markdown-css\"\nimport \"highlight.js/styles/tomorrow.css\";\nimport \"./styles/index.scss\"\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}