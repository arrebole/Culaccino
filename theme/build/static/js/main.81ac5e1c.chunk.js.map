{"version":3,"sources":["components/Header.tsx","components/Unit.tsx","api/index.ts","views/Home.tsx","views/Paper.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","className","href","Unit","props","to","title","create_at","split","style","width","src","cover","alt","summary","fetch","then","response","json","key","PaperList","state","papers","api","fetchPapers","res","setState","data","this","map","item","maxWidth","React","Component","Home","id","marked","setOptions","highlight","code","lang","hljs","value","PaperDetail","content","window","location","pathname","substring","fetchPaper","dangerouslySetInnerHTML","__html","Paper","App","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81ac5e1c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <header className=\"box-shadow-super bg-blue p-3\" > \r\n            <nav>\r\n                <h1 className=\"m-0 f3\"> <a className=\"text-white text-decoration-none\" href=\"/\">Culaccino</a></h1>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { Paper } from \"../api/index\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Unit: React.FC<Paper> = (props) => {\r\n    return (\r\n        <div className=\"d-flex m-0 p-4 box-shadow-large rounded-2 bg-white flex-column\">\r\n            <div className=\"text-align-center\">\r\n                <div className=\"my-1\">\r\n                    <Link className=\"h4 text-decoration-none text-blue\" to={props.title}>{ props.title }</Link>\r\n                </div>\r\n                <div className=\"f6 d-flex flex-justify-center text-gray-light\">\r\n                    <div className=\"px-1\" >Create on: </div> <time>{props.create_at.split(\" \")[0]}</time>\r\n                    <div className=\"px-1\" >|</div> \r\n                    <div className=\"px-1\" >Update on: </div> <time>{props.create_at.split(\" \")[0]}</time>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-2\">\r\n                <img  style={{width:\"100%\"}} src={ props.cover } alt=\"img\"/>\r\n            </div>\r\n            <p className=\"f4 text-gray text-align-center\">{ props.summary }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Unit","export interface Paper{\r\n    title: string,\r\n    type: string,\r\n    cover: string,\r\n    create_at: string,\r\n    update_at: string,\r\n    summary: string,\r\n    content: string,\r\n}\r\n\r\nexport interface PapersResponse {\r\n    code: number,\r\n    message: string,\r\n    data: Paper[]\r\n}\r\n\r\nexport interface PaperResponse {\r\n    code: number,\r\n    message: string,\r\n    data: Paper,\r\n}\r\n\r\nclass API{\r\n    // fetchPapers 获取所有文章列表\r\n    fetchPapers(limit:number = 10): Promise<PapersResponse> {\r\n        return fetch(`/api/papers`).then(response => response.json())\r\n    }\r\n    // fetchPaper 通过title获取文章的详细内容\r\n    fetchPaper(key?: string): Promise<PaperResponse> {\r\n        return fetch(`/api/paper?key=${key}`).then(response => response.json())\r\n    }\r\n}\r\n\r\n\r\nexport default new API()","import React from 'react';\r\nimport Header from '../components/Header'\r\nimport Unit from '../components/Unit'\r\nimport api, { Paper } from \"../api\"\r\n\r\n\r\nclass PaperList extends React.Component<{},{ papers: Paper[] }> {\r\n    constructor(props: {}){\r\n        super(props)\r\n        this.state = {\r\n            papers: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        api.fetchPapers().then(res=>{\r\n            this.setState({ papers: res.data})\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            this.state.papers.map(item =>\r\n                <article className=\"m-3\" style={{ width: \"95%\", maxWidth: \"900px\" }} key={item.title}>\r\n                    <Unit {...item}></Unit>\r\n                </article>\r\n            )\r\n        )\r\n    }\r\n\r\n}\r\nexport default class Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"home\" className=\"bg-gray-light\">\r\n                <Header />\r\n                <main className=\"d-flex flex-column flex-items-center\">\r\n                    <PaperList />\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport marked from 'marked';\r\nimport hljs from 'highlight.js'\r\nimport Header from '../components/Header'\r\nimport api from \"../api\"\r\n\r\n// marked use highlight Plugin\r\nmarked.setOptions({ highlight: (code, lang) => hljs.highlight(lang, code).value });\r\n\r\nfunction createMarkup(data: string) {\r\n    return { __html: marked(data) };\r\n}\r\n\r\nclass PaperDetail extends React.Component<{},{content:string}> {\r\n    constructor(props:{}){\r\n        super(props)\r\n        this.state = {\r\n            content: \"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const key = window.location.pathname.substring(1);\r\n        api.fetchPaper(key).then(res => { \r\n            this.setState({ content: res.data.content}) \r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <article className=\"d-flex flex-column flex-items-center\">\r\n                <section className=\"py-2 px-4\" style={{ maxWidth: \"980px\", width: \"95%\"}}>\r\n                    <div className=\"markdown-body\" dangerouslySetInnerHTML={createMarkup(this.state.content)} ></div>\r\n                </section>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Paper extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"paper\"><Header /><PaperDetail /> </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from './views/Home';\nimport Paper from './views/Paper';\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\"><Home /></Route>\n        <Route path=\"/:name\"><Paper /></Route>\n        <Route path=\"*\"><Redirect to={{ pathname: \"/\" }}/></Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"normalize.css\"\nimport \"github-markdown-css\"\nimport \"highlight.js/styles/tomorrow.css\";\nimport \"./styles/index.scss\"\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}