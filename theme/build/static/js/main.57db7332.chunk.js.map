{"version":3,"sources":["components/Header.tsx","components/MuiPaper.tsx","api/index.ts","views/Home.tsx","views/Paper.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["headerStyle","display","alignItems","height","backgroundColor","boxShadow","Header","style","padding","margin","fontSize","href","color","textDecoration","MuiPaperStyle","border","MuiPaper","props","to","symbol","description","getDashboard","fetch","then","response","json","getDetail","Main","useState","MuiPaperList","setMuiPaperList","length","api","res","data","flexDirection","map","item","width","maxWidth","key","Home","id","React","Component","createMarkup","__html","marked","setData","window","location","pathname","substring","className","dangerouslySetInnerHTML","setOptions","highlight","code","lang","hljs","value","Paper","App","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57db7332.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst headerStyle: React.CSSProperties = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"56px\", \r\n    backgroundColor: \"#1976d2\",\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\r\n}\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <header style={ headerStyle } > \r\n            <nav style={{ padding: \"0px 20px\" }}>\r\n                <h1 style={{ margin: \"0px\", fontSize: \"1.3rem\" }}><a href=\"/\" style={{color: \"#fff\", textDecoration: \"none\"}}>Culaccino</a></h1>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst MuiPaperStyle:React.CSSProperties = {\r\n    padding: \"16px\",\r\n    border:\"1px solid #c4c4c4\",\r\n    boxShadow: \"0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\",\r\n}\r\n\r\nexport interface IProps{\r\n    symbol: string,\r\n    description: string,\r\n}\r\n\r\nconst MuiPaper: React.FC<IProps> = (props) => {\r\n    return (\r\n        <div style = { MuiPaperStyle }>\r\n        <h2 style={{ margin:\"0px\" }}><Link style={{ fontSize: \"1.25rem\", color: \"#1976d2\", textDecoration: \"none\" }} to={props.symbol}>{ props.symbol }</Link></h2>\r\n        <p style={{ fontSize: \"0.9rem\" }}>{ props.description }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MuiPaper","\r\nexport interface DashboardData{\r\n    symbol: string,\r\n    description: string,\r\n}\r\n\r\nexport interface Dashboard{\r\n    code: number,\r\n    message: string,\r\n    data: DashboardData[]\r\n}\r\n\r\nexport interface Detail{\r\n    code: number,\r\n    message: string,\r\n    data: string,\r\n}\r\n\r\n\r\nfunction getDashboard():Promise<Dashboard> {\r\n    return fetch(\"/api/directory\").then(response => response.json())\r\n}\r\n\r\nfunction getDetail(symbol?: string):Promise<Detail>{\r\n    return fetch(`/api/source?symbol=${symbol}`).then(response => response.json())\r\n}\r\n\r\n\r\nexport default {\r\n    getDashboard,\r\n    getDetail,\r\n}","import React, { useState } from 'react';\r\nimport Header from '../components/Header'\r\nimport MuiPaper from '../components/MuiPaper'\r\nimport api, { DashboardData } from \"../api\"\r\n\r\n\r\nfunction Main() {\r\n    const [MuiPaperList, setMuiPaperList] = useState<DashboardData[]>([]);\r\n    if( MuiPaperList.length === 0) api.getDashboard().then(res => { setMuiPaperList(res.data)})\r\n    return (\r\n        <article style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n            {MuiPaperList.map(item =>\r\n                <section\r\n                    style={{ width: \"95%\", maxWidth: \"1200px\", padding: \"10px\" }}\r\n                    key={item.symbol}>\r\n                    <MuiPaper {...item}></MuiPaper>\r\n                </section>\r\n            )}\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default class Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"home\"><Header /><Main /> </div>\r\n        )\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport marked from 'marked';\r\nimport hljs from 'highlight.js'\r\nimport Header from '../components/Header'\r\nimport api from \"../api\"\r\n\r\n// marked use highlight Plugin\r\nmarked.setOptions({ highlight: (code, lang) => hljs.highlight(lang, code).value });\r\n\r\nfunction createMarkup(data: string) {\r\n    return {__html: marked(data)};\r\n  }\r\n\r\nfunction Main() {\r\n    const [data, setData] = useState<string>(\"Load...\");\r\n    if(data === \"Load...\") api.getDetail(window.location.pathname.substring(1)).then(res => { setData(res.data)});\r\n    return (\r\n        <article style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n            <section style={{  maxWidth:\"980px\", width:\"95%\", padding: \"30px 10px\" }}>\r\n                <div className=\"markdown-body\" dangerouslySetInnerHTML={createMarkup(data)} ></div>\r\n            </section>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default class Paper extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"paper\"><Header /><Main/> </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from './views/Home';\nimport Paper from './views/Paper';\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\"><Home /></Route>\n        <Route path=\"/code/:name\"><Paper /></Route>\n        <Route path=\"/alive/:name\"><Paper /></Route>\n        <Route path=\"/spirit/:name\"><Paper /></Route>\n        <Route path=\"/zero/:name\"><Paper /></Route>\n        <Route path=\"*\"><Redirect to={{ pathname: \"/\" }}/></Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"normalize.css\"\nimport \"github-markdown-css\"\nimport \"highlight.js/styles/tomorrow.css\";\nimport \"./styles/index.scss\"\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}